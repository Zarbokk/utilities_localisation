<launch>
    <arg name="launch_prefix" default="" />
    <arg name="enable_raw" default="false"/>
    <arg name="enable_imv" default="false"/>
    <arg name="camera_id" default="0"/>
    <arg name="camera_frame_id" default="meas_cam"/>
    <arg name="camera_frame" default="camera_frame" />
    <arg name="camera_name" default="localization_cam"/>
    <arg name="image_topic" default="image_raw" />
    <arg name="ns" value="uuv00"/>
    <arg name="fcu_url" default="/dev/ttyS0:921600" />
    <arg name="gcs_url" default="udp://@127.0.0.1:14550" />
    <arg name="tgt_system" default="1" />
    <arg name="tgt_component" default="1" />
    <arg name="log_output" default="screen" />
    <arg name="fcu_protocol" default="v2.0" />
    <arg name="respawn_mavros" default="false" />
    <arg name="pluginlists_yaml" value="$(find mavros)/launch/px4_pluginlists.yaml"/>
    <arg name="config_yaml" value="$(find mavros)/launch/px4_config.yaml" />






    <!-- start localization gazebo-->
      <!-- Apriltag algorithm -->

    <!-- Mavros to ROS Remapping Koordinate System-->
    <include file="$(find hippocampus_common)/launch/tf_publisher.launch" ns="$(arg ns)"></include>
    <include file="$(find hippocampus_common)/launch/tf_pose_ros_to_px4.launch" ns="$(arg ns)"></include>
      <!-- Start EKF Localization -->
    <node pkg="mu_auv_localization" type="ekf_node" name="ekf_node" clear_params="true" output="screen" ns="$(arg ns)">
        <param name="calibration" type="str" value="water_tank" />
    </node>

      <!-- start waypoints-->
    <node pkg="utilities_localisation" type="create_waypoints_infinity_experiment.py" name="drive_waypoints" clear_params="true" output="screen" launch-prefix="$(arg launch_prefix)" ns="$(arg ns)" ></node>

    <!-- start logging -->
    <machine name="tim-loc-pi" address="10.66.66.2" env-loader="~/setup.sh" user="ubuntu" password="hippocampus"/>
        <!-- Start Mavros-->

        <node machine="tim-loc-pi" name="test" pkg="utilities_localisation" type="give_rights.sh" />

        <node machine="tim-loc-pi" pkg="mavros" type="mavros_node" name="mavros" required="$(eval not respawn_mavros)" clear_params="true" output="$(arg log_output)" respawn="$(arg respawn_mavros)" ns="$(arg ns)">
            <param name="fcu_url" value="$(arg fcu_url)" />
            <param name="gcs_url" value="$(arg gcs_url)" />
            <param name="target_system_id" value="$(arg tgt_system)" />
            <param name="target_component_id" value="$(arg tgt_component)" />
            <param name="fcu_protocol" value="$(arg fcu_protocol)" />

            <!-- load blacklist, config -->
            <rosparam command="load" file="$(arg pluginlists_yaml)" />
            <rosparam command="load" file="$(arg config_yaml)" />
	    </node>

        <node machine="tim-loc-pi" name="localization_cam" pkg="usb_cam" type="usb_cam_node" output="screen" ns="$(arg ns)" >
            <param name="video_device" value="/dev/video0" />
            <param name="image_width" value="640" />
            <param name="image_height" value="480" />
            <param name="framerate" value="10" />
            <param name="pixel_format" value="yuyv" />
            <param name="sharpness" value="22"/>
            <param name="camera_frame_id" value="usb_cam" />
            <param name="brightness" value="40"/>
            <param name="io_method" value="mmap"/>
            <param name="contrast" value="32"/>
        </node>

        <node  machine="tim-loc-pi" name="image_proc" pkg="image_proc" type="image_proc" ns="$(arg ns)">
            <remap from="image_raw" to="localization_cam/image_raw"/>
            <remap from="camera_info" to="localization_cam/camera_info"/>
        </node>

        <node machine="tim-loc-pi" pkg="apriltag_ros" type="apriltag_ros_continuous_node" name="apriltag_node" ns="$(arg ns)" clear_params="true" output="screen" launch-prefix="$(arg launch_prefix)">
            <rosparam command="load" file="$(find apriltag_ros)/config/settings.yaml" />
            <rosparam command="load" file="$(find mu_auv_localization)/config/tags_standalone.yaml" />
            <remap from="camera_info" to="localization_cam/camera_info"/>
            <param name="camera_frame" type="str" value="$(arg ns)/$(arg camera_frame)" />
            <param name="publish_tag_detections_image" type="bool" value="true" />
        </node>



</launch>